from aiogram import Router, types, F, Bot
from aiogram.types import Message
from aiogram.filters import Command, CommandStart, StateFilter

from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state, State, StatesGroup
from aiogram.fsm.storage.redis import RedisStorage, Redis

from other_func import connect, create_pimary_keys, calculate_func
from FSM_state import FSM_FORM

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, PhotoSize, FSInputFile
from aiogram.utils.keyboard import ReplyKeyboardBuilder

import logging
from keyboard import *
from main import bot, PRIMARY_KEYS

router = Router()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
@router.message(CommandStart(), StateFilter(default_state))
async def process_start_bot(message: Message):
    await message.answer(text='–ü—Ä–∏–≤–µ—Ç, –≥–æ–≤–Ω–æ', reply_markup=enter_or_create_keyboard)
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ù–ï –≤ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
@router.message(CommandStart(), ~StateFilter(default_state))
async def process_start_bot(message: Message):
    await message.answer(text='–í—ã–±–∏—Ä–∞–π, –≥–æ–≤–Ω–æ', reply_markup=in_db_keyboard)
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)

# –û—Ç–º–µ–Ω–∞ –≤—Ö–æ–¥–∞
@router.callback_query(F.data == 'cancelCD')
async def process_cancel(calback: CallbackQuery, state: FSMContext):
    await calback.message.edit_text('–ü–æ–ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞ –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑', reply_markup=enter_or_create_keyboard)
    await state.clear()

# –°–æ–∑–¥–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ –≤ –ë–î
@router.callback_query(F.data == 'createCD')
async def process_enter_shop_id(callback: CallbackQuery):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[enter_btn]])
    key = create_pimary_keys()
    await connect(typeActions='create_shop_TA', shop_id=key, user_id=callback.message.from_user.id)
    await callback.message.edit_text(f'–í–æ—Ç –≤–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id –º–∞–≥–∞–∑–∏–Ω–∞ - {key}\n–ó–∞–ø–æ–Ω–∏–º–Ω–∏—Ç–µ –µ–≥–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ —Å–µ–π—á–∞—Å —É–¥–∞–ª–∏—Å—è', reply_markup=keyboard)
    
# –í—Ö–æ–¥ –≤ –ë–î –≤ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
@router.callback_query(F.data == 'enterCD', StateFilter(default_state))
async def process_enter_shop(callback: CallbackQuery, state: FSMContext):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[cancel_btn]])
    await callback.message.edit_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ id –º–∞–≥–∞–∑–∏–Ω–∞', reply_markup=keyboard)
    await state.set_state(FSM_FORM.stateWaitingShopId)
    
# –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –∫–æ–¥–∞ –º–∞–≥–∞–∑–∏–Ω–∞
@router.message(StateFilter(FSM_FORM.stateWaitingShopId), F.text.in_(PRIMARY_KEYS))  # Delete StateFilter(FSM_FORM.stateBeingInDB)
async def process_set_shop_id(message: Message, state: FSMContext):
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    await connect(typeActions='enter_shop_TA', shop_id=message.text, user_id=message.from_user.id)
    await message.answer('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –≤–æ—à–ª–∏üí¶', reply_markup=in_db_keyboard)
    await state.set_state(FSM_FORM.stateBeingInDB)

# –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞
@router.message(StateFilter(FSM_FORM.stateWaitingShopId))
async def warning(message: Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[cancel_btn]])
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
    await message.answer('–õ–æ–ª–∏–∫ –±–ª–∏–Ω\n\n–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑üò°\n–ò–ª–∏ —Å–æ–∑–¥–∞–π –Ω–æ–≤—ã–π', reply_markup=keyboard)

# –í—ã—Ö–æ–¥ –∏–∑ –ë–î –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –≤ –ë–î
@router.callback_query(F.data == 'exitCD', ~StateFilter(default_state))
async def process_exit(calback: CallbackQuery, state: FSMContext):
    await connect(typeActions='exit_db_TA', user_id=calback.from_user.id)
    await calback.message.edit_text('–í—ã–ø–æ–ª–Ω–µ–Ω –≤—ã—Ö–æ–¥ –∏–∑ –ë–î', reply_markup=enter_or_create_keyboard)
    await state.clear()

# –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤
@router.message(F.text.startswith('/show'))
async def show(message: Message):
    shops = await connect(typeActions='show_TA')
    await message.answer(str(shops))

# –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –≤ –ë–î
@router.callback_query(F.data == 'add_prdCD', StateFilter(FSM_FORM.stateBeingInDB))
async def add_product(calback: CallbackQuery, state: FSMContext):
    await calback.message.edit_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ –∏ –µ–≥–æ –∫–æ–¥-—Ñ—Ä–∞–≥–º–µ–Ω—Ç –∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –¥–æ –∫–∞–∫–æ–≥–æ —á–∏—Å–ª–∞ –≥–æ–¥–µ–Ω\n–í —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì')
    await state.set_state(FSM_FORM.stateWaitingInfoProducts)


@router.message(StateFilter(FSM_FORM.stateWaitingInfoProducts), F.photo[-1].as_('largest_photo'))
async def process_set_photo_product(message: Message, state: FSMContext, largest_photo: PhotoSize):
    photo_id = message.photo[-1].file_id
    file_info = await bot.get_file(photo_id)
    downloaded_file = await bot.download_file(file_info.file_path)
    cod_product = message.caption.split()[0]
    data_poduct = message.caption.split()[1]
    await connect(typeActions='add_product_TA', downloaded_file=downloaded_file, cod_product=cod_product, data_product=data_poduct, user_id=message.from_user.id)
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
    await state.update_data(
        photo_unique_id=largest_photo.file_unique_id,
        photo_id=largest_photo.file_id
        )
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    await message.answer('–ö—Ä–∞—Å–∞–≤–∞, —Ç–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω', reply_markup=in_db_keyboard)
    await state.set_state(FSM_FORM.stateBeingInDB)

# –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ—è–¥—è—Ç—Å—è –≤ –ë–î
@router.callback_query(StateFilter(FSM_FORM.stateBeingInDB), F.data == 'show_prdCD')
async def show_products(callback: CallbackQuery):
    info_product = await connect(typeActions='show_products_TA', user_id=callback.from_user.id)
    if info_product:
        for i in info_product:
            photo = FSInputFile(f'shops/{str(i[0])}/{str(i[1])}.jpg')
            await callback.message.answer_photo(photo=photo, caption=f'–ö–æ–¥ —Ç–æ–≤–∞—Ä–∞: {i[1]}\n–°—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏ –¥–æ: {i[2]}')
    else:
        await callback.message.edit_text(text='–¢–æ–≤–∞—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç')
    await callback.message.answer(text='–ü—Ä–æ–¥–æ–ª–∂–∏–º', reply_markup=in_db_keyboard)

# –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–≤–∞—Ä—ã, —É –∫–æ—Ç–æ—Ä—ã—Ö —Å—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏ –≤—ã—Ö–æ–¥–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 3 –¥–Ω–µ–π
@router.callback_query(StateFilter(FSM_FORM.stateBeingInDB), F.data == 'button_3_daysCD')
async def overduo_3_days(callback: CallbackQuery):
    fit_date = await connect(typeActions='enter_3_days_TA', user_id=callback.from_user.id)
    # await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
    if fit_date:
        for i in fit_date:
            photo = FSInputFile(f"shops/{str(i[0])}/{str(i[1])}.jpg")
            await callback.message.answer_photo(photo=photo, caption=f'–ö–æ–¥ —Ç–æ–≤–∞—Ä–∞ {i[1]}')
        await callback.message.answer(text='–ü—Ä–æ–¥–æ–ª–∂–∏–º', reply_markup=in_db_keyboard)
    else:
        await callback.message.answer(text="–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –¥–∞—Ç", reply_markup=in_db_keyboard)

@router.callback_query(StateFilter(FSM_FORM.stateBeingInDB), F.data == 'del_improper_productsCD')
async def del_improper_products(callback: CallbackQuery):
    await connect(typeActions='del_improper_products_TA', user_id=callback.from_user.id)
    await callback.message.edit_text(text='–í—Å–µ –ª–∏—à–Ω–∏–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã', reply_markup=in_db_keyboard)


@router.callback_query(F.data == 'calculationCD', StateFilter(FSM_FORM.stateBeingInDB))
async def wait_calculate(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text('–í–≤–µ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–±–µ–ª –¥–∞—Ç—É –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è, —Å—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏ –∏ —Ñ–æ—Ä–º–∞—Ç —Ä–∞—Å—á–µ—Ç–∞ (–¥/–º/–≥)')
    await state.set_state(FSM_FORM.stateCalculate)

@router.message(StateFilter(FSM_FORM.stateCalculate))
async def calculate(message: Message, state: FSMContext):
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    date_create, num, form = message.text.split()
    new_date = calculate_func(date_create, int(num), form)
    await message.answer(f"–¢–æ–≤–∞—Ä –≥–æ–¥–µ–Ω –¥–æ {str(new_date)}",reply_markup=in_db_keyboard)
    await state.set_state(FSM_FORM.stateBeingInDB)

